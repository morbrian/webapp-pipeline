apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Crunchy PostgreSQL Single Database using PVC
    iconClass: icon-database
    tags: database,postgresql,crunchy
  creationTimestamp: null
  name: crunchydata-single-master-minishift
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: ${APP_ID}-${PG_DATABASE}-db-service
    name: ${APP_ID}-${PG_DATABASE}-db-service
  spec:
    ports:
    - nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: ${APP_ID}-${PG_DATABASE}-db-service
      deploymentconfig: ${APP_ID}-${PG_DATABASE}-db-service
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: data-pvc
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 100Gi
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: backup-pvc
  spec:
    accessModes:
    - ReadOnlyMany
    resources:
      requests:
        storage: 1Gi
    selector:
      matchLabels:
        postgres: restore
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: pgconf-pvc
  spec:
    accessModes:
    - ReadOnlyMany
    resources:
      requests:
        storage: 1Gi
    selector:
      matchLabels:
        postgres: pgconf
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ${APP_ID}-${PG_DATABASE}-db-service
    name: ${APP_ID}-${PG_DATABASE}-db-service
  spec:
    replicas: 1
    selector:
      app: ${APP_ID}-${PG_DATABASE}-db-service
      deploymentconfig: ${APP_ID}-${PG_DATABASE}-db-service
    strategy:
      activeDeadlineSeconds: 864001
      recreateParams:
        timeoutSeconds: 864000
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_ID}-${PG_DATABASE}-db-service
          deploymentconfig: ${APP_ID}-${PG_DATABASE}-db-service
      spec:
        containers:
        - env:
          - name: PG_MODE
            value: master
          - name: PG_DATABASE
            value: ${PG_DATABASE}
          - name: PG_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-root-password
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_MASTER_USER
            valueFrom:
              secretKeyRef:
                key: postgresql-master-user
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-master-password
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_USER
            valueFrom:
              secretKeyRef:
                key: postgresql-user-csv-list
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password-csv-list
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: SHARED_BUFFERS
            value: 4096MB
          - name: BACKUP_PATH
            value: ${PG_RESTORE_PATH}
          image: crunchydata/crunchy-postgres:${CCP_IMAGE_TAG}
          name: ${APP_ID}-${PG_DATABASE}-db-service
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/pgsql-9.5/bin/pg_isready
              - -Upostgres
              - -d${PG_DATABASE}
              - -h127.0.0.1
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            capabilities: {}
          volumeMounts:
          - mountPath: /pgdata
            name: pgdata
            readOnly: false
          - mountPath: /pgconf
            name: pgconf
            readOnly: true
          - mountPath: /backup
            name: backup
            readOnly: true
        - env: []
          image: crunchydata/crunchy-pgbadger:${CCP_IMAGE_TAG}
          name: pg-badger
          ports:
          - containerPort: 15000
            protocol: TCP
          securityContext:
            capabilities: {}
          volumeMounts:
          - mountPath: /pgdata
            name: pgdata
            readOnly: true
        - env:
          - name: PG_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-root-password
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_MASTER_USER
            valueFrom:
              secretKeyRef:
                key: postgresql-master-user
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-master-password
                name: ${APP_ID}-${PG_DATABASE}-db-secret
          - name: PG_PORT
            value: "5432"
          - name: PROM_GATEWAY
            value: http://crunchy-promgateway:9091
          image: crunchydata/crunchy-collect:${CCP_IMAGE_TAG}
          name: collect
          volumeMounts:
          - mountPath: /pgdata
            name: pgdata
            readOnly: true
        securityContext:
          supplementalGroups:
          - 65534
        volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: ${PG_DATA_PVC_NAME}
        - name: pgconf
          persistentVolumeClaim:
            claimName: ${PG_PGCONF_PVC_NAME}
        - name: backup
          persistentVolumeClaim:
            claimName: ${PG_BACKUP_PVC_NAME}
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Secret
  metadata:
    creationTimestamp: null
    name: ${APP_ID}-${PG_DATABASE}-db-secret
  stringData:
    postgresql-application-admin-password: ${POSTGRESQL_APPLICATION_ADMIN_PASSWORD}
    postgresql-application-admin-user: ${POSTGRESQL_APPLICATION_ADMIN_USER}
    postgresql-master-password: ${POSTGRESQL_MASTER_PASSWORD}
    postgresql-master-user: ${POSTGRESQL_MASTER_USER}
    postgresql-password: ${POSTGRESQL_PASSWORD}
    postgresql-password-csv-list: ${POSTGRESQL_APPLICATION_ADMIN_PASSWORD},${POSTGRESQL_PASSWORD}
    postgresql-root-password: ${POSTGRESQL_ROOT_PASSWORD}
    postgresql-user: ${POSTGRESQL_USER}
    postgresql-user-csv-list: ${POSTGRESQL_APPLICATION_ADMIN_USER},${POSTGRESQL_USER}
  type: opaque
parameters:
- name: APP_ID
  description: The name assigned to all of the application objects defined in this template, must be lowercase, no special characters.
  displayName: Application Identifier
  required: true
  value: jdbcquery
- description: The name of the database that will be created
  name: PG_DATABASE
  value: data
- description: The image tag to pull with
  name: CCP_IMAGE_TAG
  value: centos7-9.5-1.4.1
- description: The image prefix to pull with
  name: CCP_IMAGE_PREFIX
  value: crunchydata
- description: The name for the pvc
  name: PG_DATA_PVC_NAME
  value: data-pvc
- description: The name for the pvc
  name: PG_PGCONF_PVC_NAME
  value: pgconf-pvc
- description: The name for the pvc
  name: PG_BACKUP_PVC_NAME
  value: backup-pvc
- description: Path to restore data, path is a relative offset from /backup mount point.
  name: PG_RESTORE_PATH
  value: minimal-2017-05-12-17-35-04
- description: PostgreSQL application username
  from: '[a-z]{12}'
  generate: expression
  name: POSTGRESQL_USER
- description: PostgreSQL application password
  from: '[a-zA-Z0-9]{12}'
  generate: expression
  name: POSTGRESQL_PASSWORD
- description: PostgreSQL root password
  from: '[a-zA-Z0-9]{12}'
  generate: expression
  name: POSTGRESQL_ROOT_PASSWORD
- description: PostgreSQL master user (often master)
  from: '[a-z]{12}'
  generate: expression
  name: POSTGRESQL_MASTER_USER
- description: PostgreSQL master password
  from: '[a-zA-Z0-9]{12}'
  generate: expression
  name: POSTGRESQL_MASTER_PASSWORD
- description: PostgreSQL application user with admin privs
  from: '[a-z]{12}'
  generate: expression
  name: POSTGRESQL_APPLICATION_ADMIN_USER
- description: PostgreSQL application admin password
  from: '[a-zA-Z0-9]{12}'
  generate: expression
  name: POSTGRESQL_APPLICATION_ADMIN_PASSWORD


